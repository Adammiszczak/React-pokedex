{"version":3,"sources":["images/psyduck.png","containers/PokemonList/PokemonList.js","containers/Main/Main.js","containers/PokemonCard/PokemonCarousel/PokemonCarouselBt.js","containers/PokemonCard/PokemonCard.js","App.js","serviceWorker.js","index.js","images/pokeball.png","containers/PokemonList/PokemonList.module.css"],"names":["module","exports","PokemonList","props","state","pokeList","pokeListCopy","currentPageCards","currentPage","postsPerPage","pageNumbers","totalPosts","isSorted","isLoading","handlePagination","bind","event","this","setState","Number","target","dataset","pageid","myData","slice","sort","a","b","comparison","name","currentComponent","axios","get","response","data","results","map","result","index","id","urlDetail","url","image","path","console","error","getPokemons","lastCard","firstCard","totalCards","i","Math","ceil","length","push","RenderPagination","Pagination","className","singlePage","Item","onClick","data-pageid","key","LoadingScreen","styles","loader","spinner","Fragment","Container","Row","Col","lg","md","handleSort","aria-hidden","pokemon","xl","sm","xs","CardDeck","Card","border","Img","as","ReactImageFallback","fallbackImage","pokeImage","initialImage","variant","src","alt","Body","Title","Text","Button","Link","to","Component","Main","PokemonCarouselBt","Carousel","indicators","prevIcon","style","imageFront","imageBack","imageFrontShiny","imageBackShiny","PokemonCard","pokemonDetail","pokemonName","currentPokemon","weight","height","base_experience","stats","sprites","front_default","back_default","front_shiny","back_shiny","getPokemonSingle","type","Table","bordered","hover","stat","scope","Navigation","Navbar","collapseOnSelect","fixed","expand","bg","Toggle","aria-controls","Collapse","Nav","href","Home","Jumbotron","require","size","About","App","basename","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d8ae5b79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/psyduck.ac89d4f9.png\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport pokeImage from '../../images/pokeball.png';\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport ReactImageFallback from \"react-image-fallback\";\r\nimport axios from 'axios';\r\nimport styles from \"./PokemonList.module.css\";\r\n\r\nexport class PokemonList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokeList: [],\r\n            pokeListCopy: [],\r\n            currentPageCards: [],\r\n            currentPage: 1,\r\n            postsPerPage: 24,\r\n            pageNumbers: 1,\r\n            totalPosts: 100,\r\n            isSorted: false,\r\n            isLoading: true\r\n        };\r\n        this.handlePagination = this.handlePagination.bind(this);\r\n    }\r\n\r\n    // Setting page on pagination\r\n\r\n    handlePagination(event) {\r\n\r\n        this.setState({\r\n            currentPage: Number(event.target.dataset.pageid)\r\n        });\r\n    }\r\n\r\n    // Sorting listing alphabetically\r\n\r\n    handleSort() {\r\n\r\n        const myData = this.state.pokeListCopy.slice();\r\n        const isSorted = this.state.isSorted;\r\n        myData.sort(function (a, b) {\r\n            let comparison = 0;\r\n            if (a.name < b.name) { comparison = -1; }\r\n            if (a.name > b.name) { comparison = 1; }\r\n            if (!isSorted) {\r\n                return comparison;\r\n            } else if (isSorted) {\r\n                return comparison * -1;\r\n            }\r\n        });\r\n\r\n        this.setState({ pokeListCopy: myData, isSorted: !isSorted })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // Current State Cache\r\n\r\n        let currentComponent = this;\r\n\r\n        // Fetching data about pokemons and save is as a state\r\n\r\n        async function getPokemons() {\r\n            try {\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=${currentComponent.state.totalPosts}`);\r\n                const pokeList = response\r\n                    .data\r\n                    .results\r\n                    .map((result, index) => ({\r\n                        name: result.name,\r\n                        id: index + 1,\r\n                        urlDetail: result.url,\r\n                        image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`,\r\n                        path: `/pokemon/${result.name}`\r\n                    }));\r\n\r\n                await currentComponent.setState({ pokeList, pokeListCopy: pokeList, isLoading: false })\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getPokemons()\r\n    }\r\n\r\n    render() {\r\n\r\n        // Pagination logic\r\n\r\n        const lastCard = this.state.currentPage * this.state.postsPerPage;\r\n        const firstCard = lastCard - this.state.postsPerPage;\r\n        const totalCards = this.state.pokeListCopy;\r\n        const currentPageCards = totalCards.slice(firstCard, lastCard);\r\n        this.state.currentPageCards = currentPageCards;\r\n        const pageNumbers = [];\r\n\r\n        for (let i = 1; i <= Math.ceil(totalCards.length / this.state.postsPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        // Pagination interactive component\r\n\r\n        const RenderPagination = () => (\r\n\r\n            <Pagination className=\"mr-3\">\r\n                {\r\n                    pageNumbers.map(singlePage =>\r\n                        <Pagination.Item onClick={this.handlePagination} \r\n                        data-pageid={singlePage} \r\n                        key={`page${singlePage}`} \r\n                        className={this.state.currentPage === singlePage ? `page-item active` : `page-item`}>{singlePage}</Pagination.Item>\r\n                    )}\r\n            </Pagination>\r\n\r\n        );\r\n\r\n\r\n        const LoadingScreen = () => (\r\n            <div className={styles.loader}>\r\n                <div className={styles.spinner}></div>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <LoadingScreen/>\r\n                <Container className=\"my-5\">\r\n                    <Row className=\"text-white my-5\">\r\n                        <Col className=\"my-5\"><h1>Pokemon lists - Page Number {this.state.currentPage}</h1></Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container className=\"mt-5\">\r\n                    <Row className=\"text-white justify-content-end mb-2\">\r\n                        <Col className=\"mb-2\" lg={4} md={6}>\r\n                            <button onClick={() => this.handleSort()} className=\"btn btn-light btn-block text-primary\">\r\n                                <i className={`fa ${!this.state.isSorted ? \"fa-arrow-up\" : \"fa-arrow-down\"}`} aria-hidden=\"true\"></i>  {!this.state.isSorted ? \"Sort A-Z\" : \"Sort Z-A\"}</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"text-white my-2 text-justify\">\r\n                        {\r\n                            this.state.currentPageCards.map((pokemon, index) =>\r\n\r\n                                <Col className=\"mb-3\" key={index} xl={3} lg={4} md={6} sm={6} xs={12}>\r\n                                    <CardDeck>\r\n                                        <Card border=\"dark\">\r\n                                            <Card.Img \r\n                                            as={ReactImageFallback} \r\n                                            fallbackImage={pokeImage} \r\n                                            initialImage={pokeImage} \r\n                                            className=\"bg-secondary\" \r\n                                            variant=\"top\" \r\n                                            src={pokemon.image} \r\n                                            alt={`Pokemon ${pokemon.name}`} />\r\n                                            <Card.Body className=\"text-dark text-center\">\r\n                                                <Card.Title>{pokemon.name}</Card.Title>\r\n                                                <Card.Text>\r\n                                                    <Button as={Link} to={`/pokemon/${pokemon.name}`} variant=\"danger\">Read more</Button>\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </CardDeck>\r\n                                </Col>\r\n                            )}\r\n                    </Row>\r\n                    <Row className=\"text-white justify-content-end\">\r\n                        <RenderPagination />\r\n                    </Row>\r\n                </Container>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonList\r\n","import React, { Component } from 'react'\r\nimport PokemonList from '../PokemonList/PokemonList';\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        return (\r\n            \r\n            <React.Fragment>\r\n                <PokemonList />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport default function PokemonCarouselBt(props) {\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <Container className=\"px-0 my-3\">\r\n    <Carousel indicators={false} prevIcon={<span aria-hidden=\"true\" className=\"carousel-control-prev-icon bg-dark\" />} className=\"bg-dark\" style={{ \"opacity\": \"0.90\" }} >\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block img-fluid mx-auto\"\r\n                            src={props.imageFront}\r\n                            alt=\"First slide\"\r\n                        /></Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block img-fluid mx-auto\"\r\n                            src={props.imageBack}\r\n                            alt=\"Third slide\"\r\n                        /></Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block img-fluid mx-auto\"\r\n                            src={props.imageFrontShiny}\r\n                            alt=\"Third slide\"\r\n                        /></Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            className=\"d-block img-fluid mx-auto\"\r\n                            src={props.imageBackShiny}\r\n                            alt=\"Third slide\"\r\n                        /></Carousel.Item>\r\n                </Carousel>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport PokemonCarouselBt from './PokemonCarousel/PokemonCarouselBt';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport class PokemonCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            pokemonDetail: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // receive props and set state cache\r\n\r\n        let pokemonName = this.props['match']['params']['pokemonId'];\r\n        let currentPokemon = this;\r\n\r\n        async function getPokemonSingle() {\r\n\r\n        // fetching detailed data and save it as state\r\n\r\n            try {\r\n                const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`);\r\n                const pokemonDetail = response.data;\r\n                const {\r\n                    name,\r\n                    weight,\r\n                    height,\r\n                    base_experience,\r\n                    stats,\r\n                    sprites: {\r\n                        front_default,\r\n                        back_default,\r\n                        front_shiny,\r\n                        back_shiny\r\n                    }\r\n                } = pokemonDetail;\r\n\r\n                currentPokemon.setState({\r\n                    isLoading: false,\r\n                    pokemonDetail: {\r\n                        name,\r\n                        weight,\r\n                        height,\r\n                        base_experience,\r\n                        stats,\r\n                        sprites: {\r\n                            front_default,\r\n                            back_default,\r\n                            front_shiny,\r\n                            back_shiny\r\n                        }\r\n                    }\r\n                })\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        getPokemonSingle()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"pt-5 mt-5\">\r\n                <div className=\"container\">\r\n                    {this.state.isLoading\r\n                        ? \r\n                        <div className=\"h4 text-white\">The Content is Loading</div>\r\n                        :\r\n                        <React.Fragment>\r\n                            <h1 className=\"text-capitalize text-white mb-5\">{this.state.pokemonDetail.name} - Pokemon details</h1>\r\n                            <PokemonCarouselBt \r\n                            imageFront={this.state.pokemonDetail.sprites['front_default']}\r\n                            imageBack={this.state.pokemonDetail.sprites['back_default']}\r\n                            imageFrontShiny={this.state.pokemonDetail.sprites['front_shiny']}\r\n                            imageBackShiny={this.state.pokemonDetail.sprites['back_shiny']}\r\n                            />\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                    <Link to=\"/pokemon\">\r\n                                        <button type=\"button\" className=\"btn btn-info text-decoration-none\"><i className=\"fas fa-arrow-left\"> Go back to list</i></button>\r\n                                    </Link>\r\n                                    </div>\r\n                                </div>\r\n                                <Table bordered hover className=\"table-light\">\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th>Property Name</th>\r\n                                            <th>Value</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                       <tr>\r\n                                           <th>Name</th>\r\n                                           <td>{this.state.pokemonDetail.name}</td>\r\n                                       </tr>   \r\n                                       <tr>\r\n                                           <th>Weight</th>\r\n                                           <td>{this.state.pokemonDetail.weight} hectograms</td>\r\n                                       </tr>   \r\n                                       <tr>\r\n                                           <th>Height</th>\r\n                                           <td>{this.state.pokemonDetail.height} decimeters</td>\r\n                                       </tr>   \r\n                                       <tr>\r\n                                           <th>Base experience for defeat</th>\r\n                                           <td>{this.state.pokemonDetail.base_experience} xp</td>\r\n                                       </tr>\r\n                                       {\r\n                                        this.state.pokemonDetail.stats.map((stat,index) => \r\n                                        <tr key={`tr-${index}`}>\r\n                                            <th className=\"text-capitalize\" scope=\"row\">{stat['stat']['name']}</th>\r\n                                            <td>{stat['base_stat']}</td>\r\n                                        </tr>\r\n                                        )}   \r\n                                    </tbody>\r\n                                </Table>\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonCard\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from './containers/Main/Main';\r\nimport PokemonCard from './containers/PokemonCard/PokemonCard';\r\n\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Navigation = () => (\r\n\r\n  <React.Fragment>\r\n    <Navbar collapseOnSelect  fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"/\"><Link className=\"nav-link\" to=\"/\">Home page</Link></Nav.Link>\r\n        <Nav.Link href=\"/pokemon\"><Link className=\"nav-link\" to=\"/pokemon\">Main List</Link></Nav.Link>\r\n        <Nav.Link href=\"/about\"><Link className=\"nav-link\" to=\"/about\">About project</Link></Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </React.Fragment>\r\n)\r\n\r\n\r\nconst Home = () =>\r\n  <React.Fragment>\r\n    <Container className=\"my-5\">\r\n      <Row className=\"text-white my-5\">\r\n        <Col className=\"my-5\"><h1>My Home Page</h1></Col>\r\n      </Row>\r\n      <Row className=\"my-5\">\r\n        <Col className=\"\">\r\n          <Jumbotron style={{ \"opacity\": \"0.90\" }} className=\"bg-dark text-white\">\r\n            <h3>Welcome at my PokeDex Project</h3>\r\n            <img className=\"my-3\" src={require('../src/images/psyduck.png')} alt=\"psyduck\" />\r\n            <p>\r\n              <Link to=\"/pokemon\"><Button size=\"lg\" variant=\"primary\">Launch list!</Button></Link>\r\n            </p>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>;\r\n\r\n\r\nconst About = () =>\r\n  <React.Fragment>\r\n    <Container className=\"my-5\">\r\n      <Row className=\"text-white my-5 text-justify\">\r\n        <Col className=\"my-5 text-center\"><h1>About project</h1></Col>\r\n        <Jumbotron style={{ \"opacity\": \"0.90\" }} className=\"bg-dark text-white\">\r\n          <p>This project is another one of recruitment task for my application as Junior Front-end Developer. This time it was from one big company. The task is to create custom Pokedex (pokemon lists). The goals are:</p>\r\n          <ul>\r\n            <li>The app should have list with pagination</li>\r\n            <li>The app should have at least one sort options</li>\r\n            <li>The app should use the PokeApi v2</li>\r\n            <li>The app should be launched by \"npm start\"</li>\r\n            <li>The app should be compatible with node.js v12</li>\r\n            <li>The app should be fully responsive</li>\r\n          </ul>\r\n          <p>I met a few obstacles:</p>\r\n          <ul>\r\n            <li>The PokeApi doesn't enable endpoints to sort data at backend</li>\r\n            <li>There is need for some asynchronic functions for fetches</li>\r\n            <li>Making pagination and sorting at the some time was challenging</li>\r\n          </ul>\r\n          <p>Further plans for this app:</p>\r\n          <ul>\r\n            <li>Javascript unit tests, which I have to learn!</li>\r\n            <li>Basic backend</li>\r\n            <li>Ux improvements</li>\r\n            <li>Users login platform</li>\r\n          </ul>\r\n        </Jumbotron>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>;\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Router basename=\"/React-pokedex\">\r\n        <Navigation />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/pokemon\" component={Main} />\r\n          <Route path=\"/pokemon/:pokemonId\" component={PokemonCard} />\r\n          <Route path=\"/about\" component={About} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pokeball.6a3a5232.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"PokemonList_loader__3mfMe\",\"FadeAnimation\":\"PokemonList_FadeAnimation__21EKh\",\"spinner\":\"PokemonList_spinner__Pf8Df\",\"spin\":\"PokemonList_spin__1Jr6a\"};"],"sourceRoot":""}